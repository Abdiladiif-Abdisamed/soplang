// Soplang Error Handling
// Demonstrates how to handle errors properly in Soplang

bandhig("Soplang Error Handling Examples")
bandhig("=============================")
bandhig()

// Example 1: Basic try-catch
bandhig("Example 1: Basic try-catch")
isku_day {
    door result = 10 / 0
    bandhig("This won't print")
} qabo (errorMsg) {
    bandhig("Caught division by zero error: " + errorMsg)
}
bandhig()

// Example 2: Try-catch with property access
bandhig("Example 2: Try-catch with property access")
shey person = {name: "Hassan"}
isku_day {
    bandhig("Age: " + person.age)  // Accessing non-existent property
} qabo (errorMsg) {
    bandhig("Caught property error: " + errorMsg)
    // Add the missing property to fix the issue
    person.age = 30
    bandhig("Fixed: Age is now " + person.age)
}
bandhig()

// Example 3: Try-catch with index out of bounds
bandhig("Example 3: Try-catch with index out of bounds")
liis numbers = [1, 2, 3]
isku_day {
    door value = numbers[5]  // Index out of bounds
} qabo (errorMsg) {
    bandhig("Caught index error: " + errorMsg)
    // Add more elements to make the index valid
    numbers.kudar(4)
    numbers.kudar(5)
    numbers.kudar(6)
    bandhig("Fixed: Value at index 5 is now " + numbers[5])
}
bandhig()

// Example 4: Nested try-catch
bandhig("Example 4: Nested try-catch")
isku_day {
    door x = 1
    isku_day {
        door y = x / 0
    } qabo (innerError) {
        bandhig("Inner catch: " + innerError)
        throw "Rethrowing modified error"  // Rethrow to outer catch
    }
} qabo (outerError) {
    bandhig("Outer catch: " + outerError)
}
bandhig()

// Example 5: Function with error handling
bandhig("Example 5: Function with error handling")
hawl safeDivide(a, b) {
    isku_day {
        haddii (b == 0) {
            throw "Cannot divide by zero"
        }
        celi a / b
    } qabo (errorMsg) {
        bandhig("Error in safeDivide: " + errorMsg)
        celi null  // Return a default value in case of error
    }
}

door result1 = safeDivide(10, 2)
door result2 = safeDivide(10, 0)

bandhig("Result of 10/2: " + result1)
bandhig("Result of 10/0: " + result2)
bandhig()

bandhig("All error handling examples completed")
