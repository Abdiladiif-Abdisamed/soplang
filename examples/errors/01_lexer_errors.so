// Soplang Lexer Errors
// Demonstrates errors that occur during the lexical analysis phase

qor("Soplang Lexer Error Examples")
qor("============================")
qor("Uncomment examples one at a time to see specific errors")
qor("")

// Example 1: Unexpected character
// This will cause an error because '@' is not a valid character in Soplang
// This should use the "unexpected_char" error code
door variable = 5 @ 10

// Example 2: Unterminated string
// This will cause an error because the string doesn't have a closing quote
// This should use the "unterminated_string" error code
// door greeting = "Hello, World

// Example 3: Unterminated multi-line comment
// This will cause an error because the comment is never closed
// This should use the "unterminated_comment" error code
// /* This is an unterminated comment
//    door x = 10
// */

// Example 4: Invalid logical operator
// This causes an error because '&' needs another '&' to form '&&'
// haddii (run & run) {
//     qor("This won't work")
// }

// Example 5: Invalid syntax for OR operator
// This causes an error because '|' needs another '|' to form '||'
// haddii (been | been) {
//     qor("This also won't work")
// }

// Valid code to run when all examples are commented out
door test = 10
qor("Only this line should print when all errors are commented out")
