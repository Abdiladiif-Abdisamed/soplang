// Soplang Data Type Validation Demo
// This file demonstrates the improved data type validation

// Correct variable declarations with proper types
door general = 42                // Generic variable (no specific type)
tiro number = 42                 // Number type
jajab decimal = 3.14             // Float type
qoraal text = "Hello, World!"    // String type with double quotes
qoraal name = 'Sharafdin'        // String type with single quotes
boole isTrue = run               // Boolean type (Soplang native)
labadaran isFalse = been         // Alternative boolean type name

// Examples that should trigger type validation errors
tiro wrongNumber = "42"          // ❌ Type mismatch: Using string for number type
qoraal missingQuotes = Hello     // ❌ Type mismatch: String without quotes
boole wrongBool = 1              // ❌ Type mismatch: Number for boolean type
labadaran notBool = "true"       // ❌ Type mismatch: String for boolean type

// Examples of malformed strings
qoraal malformedString = "Hello""  // ❌ Repeated closing quotes
qoraal unclosedString = "Oops      // ❌ Missing closing quote

// Using boolean values in incorrect contexts
door thisIs = run                // Should suggest using 'boole' instead

// Using generic 'door' for specific types
door number2 = 50                // Should suggest 'tiro' instead
door text2 = "Text"              // Should suggest 'qoraal' instead
door isActive = run              // Should suggest 'boole' instead
door fraction = 1.5              // Should suggest 'jajab' instead

// Boolean values in contexts
haddii (run) {                   // Correct use in conditional
    qor("This is true")
}

door x = 5
haddii (x > 3 && run) {          // Correct use in boolean expression
    qor("This is also true")
}

qor(run)                         // Not ideal use of boolean 