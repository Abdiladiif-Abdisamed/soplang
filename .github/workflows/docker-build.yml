name: Build and Push Docker Images

on:
  push:
    tags:
      - "v*"
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to tag (defaults to latest for manual runs)"
        required: false
        default: "latest"

# Add explicit permissions for GITHUB_TOKEN
permissions:
  contents: read
  packages: write

jobs:
  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            soplang/soplang
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Generate version from git tag or manual input
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref_type }}" == "tag" && "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION=${{ github.event.release.tag_name }}
            VERSION=${VERSION#v}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "VERSION=latest" >> $GITHUB_ENV
          fi
          echo "Version set to: ${{ env.VERSION }}"

      # Login to Docker Hub (if secrets are available)
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          VCS_REF: ${{ github.sha }}

      # Login to GitHub Container Registry (always available with GITHUB_TOKEN)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Determine which registries to push to
      - name: Set registry targets
        id: registries
        run: |
          # Default to GitHub Container Registry only
          TARGETS="ghcr.io/${{ github.repository }}"

          # Add Docker Hub if credentials are available
          if [[ -n "${{ secrets.DOCKERHUB_USERNAME }}" && -n "${{ secrets.DOCKERHUB_TOKEN }}" ]]; then
            TARGETS="${TARGETS},soplang/soplang"
          fi

          echo "targets=${TARGETS}" >> $GITHUB_OUTPUT

      # Build and push Docker images
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # Use the determined target registries
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          build-args: |
            VERSION=${{ env.VERSION }}
            BUILD_DATE=${{ steps.meta.outputs.labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}

      # Verify Docker Hub Repository and provide appropriate guidance
      - name: Verify Docker Push
        run: |
          echo "âœ… Build and push completed!"

          if [[ -n "${{ secrets.DOCKERHUB_USERNAME }}" && -n "${{ secrets.DOCKERHUB_TOKEN }}" ]]; then
            echo "Docker Hub image should be available at: https://hub.docker.com/r/soplang/soplang"
            echo "To verify availability (may take a few minutes):"
            echo "docker pull soplang/soplang:latest"
          fi

          echo ""
          echo "The GitHub Container Registry image should be available at: ghcr.io/soplang/soplang"
          echo "To verify availability:"
          echo "docker pull ghcr.io/soplang/soplang:latest"
